import '../search_screen/widgets/search_item_widget.dart';import '../search_screen/widgets/sliderrectangle6_item_widget.dart';import 'package:carousel_slider/carousel_slider.dart';import 'package:flutter/material.dart';import 'package:sakuni/core/app_export.dart';import 'package:sakuni/widgets/app_bar/appbar_image.dart';import 'package:sakuni/widgets/app_bar/custom_app_bar.dart';import 'package:sakuni/widgets/custom_elevated_button.dart';import 'package:smooth_page_indicator/smooth_page_indicator.dart';import 'package:sakuni/presentation/sort_by_bottomsheet/sort_by_bottomsheet.dart';import 'package:sakuni/presentation/filter_bottomsheet/filter_bottomsheet.dart';
// ignore_for_file: must_be_immutable
class SearchScreen extends StatelessWidget {SearchScreen({Key? key}) : super(key: key);

int sliderIndex = 1;

@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(backgroundColor: appTheme.gray300, appBar: CustomAppBar(height: getVerticalSize(59), leadingWidth: 31, leading: Container(height: getVerticalSize(2), width: getHorizontalSize(17), margin: getMargin(left: 14, top: 28, bottom: 28), child: Stack(alignment: Alignment.center, children: [AppbarImage(height: getVerticalSize(2), width: getHorizontalSize(17), svgPath: ImageConstant.imgArrow1), AppbarImage(height: getVerticalSize(2), width: getHorizontalSize(17), svgPath: ImageConstant.imgArrow1)])), title: Padding(padding: getPadding(left: 23), child: Text("Phone", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleLargeBlack9000122)), actions: [AppbarImage(height: getVerticalSize(30), width: getHorizontalSize(29), svgPath: ImageConstant.imgIcbaselinemic, margin: getMargin(left: 18, top: 16, right: 12)), AppbarImage(height: getSize(27), width: getSize(27), svgPath: ImageConstant.imgBasilcameraoutline, margin: getMargin(left: 19, top: 16, right: 12, bottom: 3)), AppbarImage(height: getSize(25), width: getSize(25), svgPath: ImageConstant.imgFileBlack9000125x25, margin: getMargin(left: 19, top: 16, right: 30, bottom: 5))], styleType: Style.bgFill_3), body: Container(width: double.maxFinite, padding: getPadding(left: 11, top: 6, right: 11, bottom: 6), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Padding(padding: getPadding(left: 1), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Expanded(child: CustomElevatedButton(width: double.maxFinite, height: getVerticalSize(54), text: "Sort by", margin: getMargin(right: 3), rightIcon: Container(margin: getMargin(left: 10), child: CustomImageView(svgPath: ImageConstant.imgRiarrowdropdownline)), buttonStyle: CustomButtonStyles.fillPrimary, buttonTextStyle: theme.textTheme.bodyLarge!, onTap: () {onTapSortby(context);})), Expanded(child: CustomElevatedButton(width: double.maxFinite, height: getVerticalSize(54), text: "Filters", margin: getMargin(left: 3), rightIcon: Container(margin: getMargin(left: 6), child: CustomImageView(svgPath: ImageConstant.imgRiarrowdropdownline)), buttonStyle: CustomButtonStyles.fillPrimary, buttonTextStyle: theme.textTheme.bodyLarge!, onTap: () {onTapFilters(context);}))])), Container(height: getVerticalSize(150), width: getHorizontalSize(403), margin: getMargin(top: 16), child: Stack(alignment: Alignment.bottomCenter, children: [CarouselSlider.builder(options: CarouselOptions(height: getVerticalSize(150), initialPage: 0, autoPlay: true, viewportFraction: 1.0, enableInfiniteScroll: false, scrollDirection: Axis.horizontal, onPageChanged: (index, reason) {sliderIndex = index;}), itemCount: 1, itemBuilder: (context, index, realIndex) {return Sliderrectangle6ItemWidget();}), Align(alignment: Alignment.bottomCenter, child: Container(height: getVerticalSize(8), margin: getMargin(bottom: 4), child: AnimatedSmoothIndicator(activeIndex: sliderIndex, count: 1, axisDirection: Axis.horizontal, effect: ScrollingDotsEffect(activeDotColor: Color(0X1212121D)))))])), Expanded(child: Padding(padding: getPadding(left: 2, top: 16, right: 2), child: GridView.builder(shrinkWrap: true, gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(mainAxisExtent: getVerticalSize(283), crossAxisCount: 2, mainAxisSpacing: getHorizontalSize(22), crossAxisSpacing: getHorizontalSize(22)), physics: BouncingScrollPhysics(), itemCount: 6, itemBuilder: (context, index) {return SearchItemWidget();})))])))); } 


/// Shows a modal bottom sheet with [SortByBottomsheet] 
/// widget content.
/// The sheet is displayed on top of the current view with scrolling enabled if 
/// content exceeds viewport height.
onTapSortby(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>SortByBottomsheet(),isScrollControlled: true); } 


/// Shows a modal bottom sheet with [FilterBottomsheet] 
/// widget content.
/// The sheet is displayed on top of the current view with scrolling enabled if 
/// content exceeds viewport height.
onTapFilters(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>FilterBottomsheet(),isScrollControlled: true); } 
 }
