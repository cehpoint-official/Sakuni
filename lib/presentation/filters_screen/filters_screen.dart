import '../filters_screen/widgets/chipviewframefo2_item_widget.dart';import '../filters_screen/widgets/chipviewframefo4_item_widget.dart';import '../filters_screen/widgets/chipviewframefo_item_widget.dart';import '../filters_screen/widgets/chipviewgroup22_item_widget.dart';import 'package:flutter/material.dart';import 'package:sakuni/core/app_export.dart';import 'package:sakuni/widgets/app_bar/appbar_button_2.dart';import 'package:sakuni/widgets/app_bar/custom_app_bar.dart';import 'package:sakuni/widgets/custom_drop_down.dart';import 'package:sakuni/widgets/custom_elevated_button.dart';
// ignore_for_file: must_be_immutable
class FiltersScreen extends StatelessWidget {FiltersScreen({Key? key}) : super(key: key);

List<String> dropdownItemList = ["Item One", "Item Two", "Item Three"];

List<String> dropdownItemList1 = ["Item One", "Item Two", "Item Three"];

@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(backgroundColor: appTheme.gray20004, appBar: CustomAppBar(height: getVerticalSize(67), title: AppbarButton2(margin: getMargin(left: 12), onTap: () {onTapFilters(context);}), actions: [Padding(padding: getPadding(left: 18, top: 22, right: 18, bottom: 17), child: Text("Reset", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleLargeGray300))], styleType: Style.bgFill_2), body: Container(width: double.maxFinite, padding: getPadding(left: 12, top: 42, right: 12, bottom: 42), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Padding(padding: getPadding(left: 2), child: Wrap(runSpacing: getVerticalSize(5), spacing: getHorizontalSize(5), children: List<Widget>.generate(5, (index) => ChipviewframefoItemWidget()))), Padding(padding: getPadding(left: 2, top: 28), child: Text("Locality/Landmark", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMedium16)), Padding(padding: getPadding(left: 2, top: 26), child: Wrap(runSpacing: getVerticalSize(5), spacing: getHorizontalSize(5), children: List<Widget>.generate(2, (index) => Chipviewgroup22ItemWidget()))), Padding(padding: getPadding(left: 2, top: 28), child: Wrap(runSpacing: getVerticalSize(5), spacing: getHorizontalSize(5), children: List<Widget>.generate(5, (index) => Chipviewframefo2ItemWidget()))), Padding(padding: getPadding(top: 28), child: Text("Budget", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMedium16)), Padding(padding: getPadding(left: 8, top: 13), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Expanded(child: CustomDropDown(icon: Container(margin: getMargin(left: 16, right: 30), child: CustomImageView(svgPath: ImageConstant.imgArrowdownBlack9000122x22)), hintText: "TZSMin", margin: getMargin(right: 8), textStyle: CustomTextStyles.bodyLarge16, items: dropdownItemList, filled: true, fillColor: theme.colorScheme.primary, contentPadding: getPadding(left: 30, top: 17, bottom: 17), onChanged: (value) {})), Expanded(child: CustomDropDown(icon: Container(margin: getMargin(left: 16, right: 30), child: CustomImageView(svgPath: ImageConstant.imgArrowdownBlack9000122x22)), hintText: "TZSMax", margin: getMargin(left: 8), textStyle: CustomTextStyles.bodyLarge16, items: dropdownItemList1, filled: true, fillColor: theme.colorScheme.primary, contentPadding: getPadding(left: 30, top: 17, bottom: 17), onChanged: (value) {}))])), Padding(padding: getPadding(left: 2, top: 26), child: Wrap(runSpacing: getVerticalSize(5), spacing: getHorizontalSize(5), children: List<Widget>.generate(5, (index) => Chipviewframefo4ItemWidget()))), Spacer(), CustomElevatedButton(width: double.maxFinite, height: getVerticalSize(63), text: "See 100 results", margin: getMargin(left: 12, right: 12, bottom: 29), buttonStyle: CustomButtonStyles.fillLime500, buttonTextStyle: CustomTextStyles.titleLargeSemiBold, onTap: () {onTapSee100results(context);}, alignment: Alignment.center)])))); } 
/// Navigates to the homeTabContainerScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the `Navigator` widget
/// to push the named route for the homeTabContainerScreen.
onTapFilters(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homeTabContainerScreen); } 
/// Navigates to the filtersOneScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the `Navigator` widget
/// to push the named route for the filtersOneScreen.
onTapSee100results(BuildContext context) { Navigator.pushNamed(context, AppRoutes.filtersOneScreen); } 
 }
